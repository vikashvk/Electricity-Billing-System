spring:
    datasource:
        url: jdbc:mysql://sql12.freesqldatabase.com:3306/sql12344985
        username: sql12344985
        password: 7iUHCivv3a
        driverClassName: com.mysql.cj.jdbc.Driver
    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL55Dialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 74944192638-u900b55ejbd8mofnc86f4bo3lalq38u2.apps.googleusercontent.com
              clientSecret: XixO2t3QJTMcDy9m1WyOcwyT
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 692122531576590
              clientSecret: 509411827f08e857694d9ea3db1ef182
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v4.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v4.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v4.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris: http://localhost:4200/oauth2-redirect
server:
  port: 9090